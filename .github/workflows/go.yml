# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master", "v2" ]
  pull_request:
    branches: [ "master", "v2" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5   
        ports:
          - 5432:5432

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Decide if tests should run
      id: set_run_tests
      run: |
        if [[ ("$GITHUB_EVENT_NAME" == "push" && ( "$GITHUB_HEAD_COMMIT_MESSAGE" == fix:* || "$GITHUB_HEAD_COMMIT_MESSAGE" == feat:* || "$GITHUB_HEAD_COMMIT_MESSAGE" == refactor:* || "$GITHUB_HEAD_COMMIT_MESSAGE" == perf:* )) || \
              ("$GITHUB_EVENT_NAME" == "pull_request" && ( "$GITHUB_PULL_REQUEST_TITLE" == fix:* || "$GITHUB_PULL_REQUEST_TITLE" == feat:* || "$GITHUB_PULL_REQUEST_TITLE" == refactor:* || "$GITHUB_PULL_REQUEST_TITLE" == perf:* )) ]]; then
          echo "should_run_tests=true" >> $GITHUB_OUTPUT
        else
          echo "should_run_tests=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        GITHUB_PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}

    - name: Test with coverage
      if: steps.set_run_tests.outputs.should_run_tests == 'true'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: tinh-tinh/sqlorm
